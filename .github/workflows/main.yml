# This is a basic workflow to help you get started with Actions

name: CI

#comment
# Controls when the workflow will run
on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Compile Java Classes
        run:  | 
          cd ./Projects/P2
          ./gradlew build

  TestMapMove:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Map Get Location
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestMapMove

  TestGhostValidMoves:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Ghost Get Valid Moves
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestGhostValidMoves
    
  TestPacmanValidMoves:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Pacman Get Valid Moves
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestPacManValidMoves

  TestMapEatCookie:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Pacman Get Valid Moves
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestMapEatCookie

  test_ghost_in_range:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test ghost in range
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestGhostInRange

  test_pacman_in_range:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test pacman in range
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestPacManInRange

  test_map_attack:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test map attack
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestMapAttack

  # TA ghost function
  test_ghost_attack:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test ghost attack
        run: |
          cd ./Projects/P2
          ./gradlew build


  mapgetloc:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Calculator Add
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestMapGetLoc

  pacmanmove:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Calculator Add
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestPacManMove

  ghostmove:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Calculator Add
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestGhostMove

  pacmancons:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Test Calculator Add
        run: |
          cd ./Projects/P2
          ./gradlew build
          ./gradlew test --tests TestPacManConsume
